<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
 						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
 						http://www.springframework.org/schema/context
 						http://www.springframework.org/schema/context/spring-context-3.0.xsd
 						http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd 
                        http://www.springframework.org/schema/aop    
          				http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">


	<!-- properties -->
	<context:property-placeholder location="classpath:application.properties,classpath:boot-settings.properties"
		ignore-unresolvable="true" />

	<!-- 设置扫描使用注解的类所在的包 -->
	<context:component-scan base-package="org.coderfun.boot.web.*,org.coderfun.common.*.controller"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:include-filter type="annotation"
			expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>
	
	<!-- 配置视图的前缀和后缀 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		id="internalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<!-- 静态资源文件的访问 -->
	<mvc:resources location="/static/" mapping="/static/**"/>

	<!-- JSON转换器 -->
	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg>
					<value>UTF-8</value>
				</constructor-arg>
				<property name="writeAcceptCharset" value="false" />
			</bean>
			<bean id="mappingJacksonHttpMessageConverter"
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	
	<!-- 统一异常处理 -->
	<bean class="org.coderfun.common.exception.ExceptionHandlerAdvice"></bean>
	
	
	<!-- JPA  OpenEntityManagerInViewInterceptor-->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean
				class="org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor">
				<property name="entityManagerFactory" ref="entityManagerFactory" />
			</bean>
		</mvc:interceptor>
	</mvc:interceptors>
	
	<!-- aop begin -->
	<bean id="logMethodInterceptor" class="org.coderfun.boot.aop.LogMethodInterceptor" />

	<!-- 方法拦截器（拦截controller包中的所有被RequestMapping注解的方法） MethodInterceptor -->
	<aop:config proxy-target-class="true">
		<aop:pointcut id="controllerMethodPointcut"
			expression="@annotation(org.coderfun.common.log.Logger)" />
		<aop:advisor advice-ref="logMethodInterceptor"
			pointcut-ref="controllerMethodPointcut" />
	</aop:config>
	
	<!-- shiro 注解支持 -->
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
	    <property name="securityManager" ref="securityManager"/>
	</bean>
	
	<!-- aop end -->
</beans>
