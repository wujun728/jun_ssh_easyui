<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation=          
          "http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop.xsd">
           
<bean id="target" class="aop.impl.advice.Waiter"/>

<!-- 前置增强  -->
<!-- 
<bean id="beforeAdvice" class="aop.impl.advice.BeforeAdvice"/>
<bean id="waiterBefore" class="org.springframework.aop.framework.ProxyFactoryBean">
   <property name="target" ref="target"/>
   <property name="interceptorNames" value="beforeAdvice"/>
   <property name="proxyTargetClass" value="true"/>
</bean>
 -->
<!-- 后置增强 -->
<bean id="afterAdvice" class="aop.impl.advice.AfterAdvice"/>
<bean id="waiterAfter" class="org.springframework.aop.framework.ProxyFactoryBean">
   <property name="target" ref="target"/>
   <property name="interceptorNames" value="afterAdvice"/>
   <property name="proxyTargetClass" value="true"/>
   <!-- <property name="proxyInterfaces" value="com.wait.Waiter"/> -->
</bean>
<!-- 环绕增强 -->
<bean id="roundAdvice" class="aop.impl.advice.RoundAdvice"/>
<bean id="waiterRound" class="org.springframework.aop.framework.ProxyFactoryBean">
   <property name="target" ref="target"/>
   <property name="interceptorNames" value="roundAdvice"/>
   <property name="proxyTargetClass" value="true"/>
   <!-- <property name="proxyInterfaces" value="com.wait.Waiter"/> -->
</bean>

<!--VIP__!!!!!!!!__VIP _ VIP _ VIP__!!!_______________________________________-->
<!-- 另类的配置方式 此方式依旧需要实现advice接口  -->
<!-- 好处是：可以切入具体的方法                                               VIP__!!!!!!!!__VIP _ VIP _ VIP__!!!__-->
<!--just getBean("target"),no above-->
<!-- <bean id="target" class="aop.impl.advice.Waiter"/> -->
<bean id="beforeAdvice" class="aop.impl.advice.BeforeAdvice"/>
<aop:config proxy-target-class="true">
   <aop:pointcut expression="target(aop.impl.advice.Waiter) and execution(* leadCustomer(..))" id="pointw"/>
   <aop:advisor  advice-ref="beforeAdvice" pointcut-ref="pointw"/>
</aop:config>


</beans>