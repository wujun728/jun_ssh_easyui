<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:jee="http://www.springframework.org/schema/jee" xmlns:lang="http://www.springframework.org/schema/lang"
    xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
                        http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
                        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
                        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

    <!-- 这个配置用于junit测试.正式访问项目的时候，可以注释掉,因为springmvc已经配置好 -->
    <!-- 加上这句配置，自动扫描，则测试的时候才输出aop日志信息， -->
    <context:component-scan base-package="com.jun.plugin.springbatch" />


    <!-- 引入配置 -->
    <import resource="classpath:/jdbc/jdbc-context.xml" />
    
    <!-- 下面3个是batch相关的配置.这里只测试txt文件，如需测试其他，请将相应的注释去掉，注释其他即可. -->
    <!-- <import resource="classpath:/spring/spring-xml-batch.xml" /> -->
    <import resource="classpath:/spring/spring-txt-batch.xml" />
    <!-- <import resource="classpath:/spring/spring-csv-batch.xml" /> -->
    

    <!-- 配置属性资源文件 -->
    <bean id="configProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="locations">
            <list>
                <value>classpath:/jdbc/jdbc.properties</value>
            </list>
        </property>
    </bean>

    <!-- 引入properties -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <!-- ignoreResourceNotFound表示：是否忽略无法加载的文件 -->
        <property name="ignoreResourceNotFound" value="false" />
        <property name="properties" ref="configProperties" />
    </bean>


    <!-- 事务管理 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" p:dataSource-ref="dataSource" />

    <tx:annotation-driven transaction-manager="transactionManager" />

    <!-- 拦截器方式配置事物 -->
    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
        <!-- 指定对应开头的方法进行事务的控制 -->
        <tx:attributes>
            <!-- 以这些开头的方法，需要事务控制 -->
            <tx:method name="add*" propagation="REQUIRED" />
            <tx:method name="modify*" propagation="REQUIRED" />
            <tx:method name="delete*" propagation="REQUIRED" />
            <tx:method name="save*" propagation="REQUIRED" />
            <tx:method name="update*" propagation="REQUIRED" />
            <tx:method name="del*" propagation="REQUIRED" />
            
            <!-- 这些开头的方法，不需要事务控制 -->
            <tx:method name="find*" propagation="SUPPORTS" />
            <tx:method name="query*" propagation="SUPPORTS" />
            <tx:method name="get*" propagation="SUPPORTS" />
            <tx:method name="search*" propagation="SUPPORTS" />
            <tx:method name="*" propagation="SUPPORTS" />
        </tx:attributes>
    </tx:advice>
    <!-- 配置spring事务扫描的包 -->
    <aop:config>
        <aop:pointcut id="transactionPointcut" expression="execution(* com.jun.plugin.springbatch.*.*(..))" />
        <!-- 为这些包中的方法指定事务 -->
        <aop:advisor pointcut-ref="transactionPointcut" advice-ref="transactionAdvice" />
    </aop:config>

    <!-- 另外最好还要加入DefaultAnnotationHandlerMapping，不然会被 XML或其它的映射覆盖！ DefaultAnnotationHandlerMapping:决定使用哪一个handler来处理请求。 
        AnnotationMethodHandlerAdapter：上一个类决定了handler，但没有具体到对应的方法上，这个类的作用是决定哪一个方法处理当前请求，并处理@RequestParam之类的注解，负责参数绑定。 
        DefaultAnnotationHandlerMapping的作用： 将扫描当前所有已经注册的spring beans中的@requestmapping标注以找出url和 
        handler method处理函数的关系并予以关联 -->
    <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />

</beans>