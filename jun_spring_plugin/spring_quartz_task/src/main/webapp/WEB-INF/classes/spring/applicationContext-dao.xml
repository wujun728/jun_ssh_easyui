<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd    http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<!-- <util:properties id="p_datasource" location="classpath:/config/jdbc.properties" /> -->

	<!-- quartz数据源，使用alibaba druid连接池 -->
	<!-- <bean id="masterDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> -->
	<!-- <property name="name" value="#{p_datasource['master.name']}" /> -->
	<!-- <property name="url" value="#{p_datasource['master.url']}" /> -->
	<!-- <property name="username" value="#{p_datasource['master.username']}" /> -->
	<!-- <property name="password" value="#{p_datasource['master.password']}" /> -->
	<!-- <property name="driverClassName" value="#{p_datasource['master.driverClassName']}" /> -->
	<!-- <property name="initialSize" value="#{p_datasource['master.initialSize']}" /> -->
	<!-- <property name="maxActive" value="#{p_datasource['master.maxActive']}" /> -->
	<!-- <property name="minIdle" value="#{p_datasource['master.minIdle']}" /> -->
	<!-- <property name="maxWait" value="#{p_datasource['master.maxWait']}" /> -->
	<!-- <property name="useUnfairLock" value="#{p_datasource['master.useUnfairLock']}" /> -->
	<!-- <property name="validationQuery" value="#{p_datasource['master.validationQuery']}" /> -->
	<!-- <property name="testOnBorrow" value="#{p_datasource['master.testOnBorrow']}" /> -->
	<!-- <property name="testOnReturn" value="#{p_datasource['master.testOnReturn']}" /> -->
	<!-- <property name="testWhileIdle" value="#{p_datasource['master.testWhileIdle']}" /> -->
	<!-- <property name="timeBetweenEvictionRunsMillis" value="#{p_datasource['master.timeBetweenEvictionRunsMillis']}" /> -->
	<!-- <property name="minEvictableIdleTimeMillis" value="#{p_datasource['master.minEvictableIdleTimeMillis']}" /> -->
	<!-- <property name="filters" value="#{p_datasource['master.filters']}" /> -->
	<!-- </bean> -->

	<!-- 总数据源 -->
	<!-- <bean id="dataSource" class="com.jun.plugin.quartz.job.common.datasource.DynamicDataSource"> -->
	<!-- <property name="targetDataSources"> -->
	<!-- <map key-type="java.lang.String"> -->
	<!-- <entry key="master" value-ref="masterDataSource" /> -->
	<!-- </map> -->
	<!-- </property> -->
	<!-- <property name="defaultTargetDataSource" ref="masterDataSource" /> -->
	<!-- </bean> -->

	<!-- 数据源Aspect -->
	<!-- <bean id="dataSourceAspect" class="com.jun.plugin.quartz.job.common.datasource.DataSourceAspect" /> -->

	<!-- 数据源AOP -->
	<!-- <aop:config> -->
	<!-- <aop:aspect order="1" ref="dataSourceAspect"> -->
	<!-- <aop:pointcut id="dsPointCut" expression="execution(* com.jun.plugin.quartz.job..*Service.*(..))" /> -->
	<!-- <aop:before pointcut-ref="dsPointCut" method="before" /> -->
	<!-- </aop:aspect> -->
	<!-- </aop:config> -->

	<bean id="dataSource" class="org.h2.jdbcx.JdbcConnectionPool" destroy-method="dispose">
		<constructor-arg>
			<bean class="org.h2.jdbcx.JdbcDataSource">
				<!-- 内存模式 -->
				<property name="URL" value="jdbc:h2:mem:test" />
				<property name="user" value="sa" />
				<property name="password" value="sa" />
			</bean>
		</constructor-arg>
	</bean>

	<!-- 初始化数据表结构 -->
	<jdbc:initialize-database data-source="dataSource" ignore-failures="ALL">
		<jdbc:script location="classpath:db/create_table.sql" />
		<!-- <jdbc:script location="classpath:database/h2/import-data.sql" /> -->
	</jdbc:initialize-database>

	<bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />
		<property name="mapperLocations" value="classpath*:mybatis/mapper/**/*.xml" />
	</bean>

	<!-- SqlSessionTemplate -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sessionFactory" />
	</bean>

	<!-- Mapper接口所在包名，Spring会自动查找其下的Mapper -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.jun.plugin.quartz.job.biz.mapper" />
		<property name="sqlSessionFactoryBeanName" value="sessionFactory" />
	</bean>

	<!-- 事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />

	<!-- 配置事务特性 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="delete*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception" no-rollback-for="java.lang.RuntimeException" />
			<tx:method name="insert*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.RuntimeException" />
			<tx:method name="update*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception" />
			<tx:method name="find*" propagation="SUPPORTS" />
			<tx:method name="get*" propagation="SUPPORTS" />
			<tx:method name="select*" propagation="SUPPORTS" />
		</tx:attributes>
	</tx:advice>

	<!-- 配置那些类的方法进行事务管理，当前com.jun.plugin.quartz.job.biz.service包中的类中所有方法需要，还需要参考tx:advice的设置 -->
	<aop:config proxy-target-class="true">
		<!-- <aop:pointcut id="allManagerMethod" expression="execution(* com.jun.plugin.quartz.job.*.*(..))" /> -->
		<aop:pointcut id="allManagerMethod" expression="execution(* com.jun.plugin.quartz.job..*Service.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="allManagerMethod" order="0" />
	</aop:config>

</beans>