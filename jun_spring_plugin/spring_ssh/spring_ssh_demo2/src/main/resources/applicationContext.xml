<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		"
	default-lazy-init="true">

	<description>Spring公共配置 </description>

	<!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
	<context:component-scan base-package="com.jd.ssh.sshdemo">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>

	<!-- sessionFactory 配置 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<!--<prop key="hibernate.show_sql">false</prop> <prop key="hibernate.format_sql">false</prop> 
					<prop key="javax.persistence.validation.mode">none</prop> -->
				<prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext
				</prop>
			</props>
		</property>
		<!-- 扫描entity -->
		<property name="packagesToScan">
			<list>
				<value>com.jd.ssh.sshdemo.entity</value>
			</list>
		</property>
	</bean>


	<bean id="springClassTest"
		class="com.jd.ssh.sshdemo.bean.SpringClassTest"  init-method="init">
		<property name="name" value="D:\\index"></property>
	</bean> 
	
	<bean id="ikAnalyzer" class="org.wltea.analyzer.lucene.IKAnalyzer">
	</bean>
	<bean id="indexManager"
		class="com.jd.ssh.sshdemo.search.IndexManager"  init-method="init">
		<property name="indexPath" value="D:\\index"></property>
	</bean>
	<bean id="searchHelper"
		class="com.jd.ssh.sshdemo.search.SearchHelper" >
	</bean>
	
	<!-- 使用annotation定义事务 <tx:annotation-driven transaction-manager="transactionManager" 
		proxy-target-class="true" /> -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager"
		abstract="false" lazy-init="default" autowire="default">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<!-- 事务管理配置 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" read-only="false" />
			<tx:method name="insert*" read-only="false" rollback-for="Exception" />
			<tx:method name="get*" read-only="false" rollback-for="Exception" />
			<tx:method name="add*" read-only="false" rollback-for="Exception" />
			<tx:method name="update*" read-only="false" rollback-for="Exception" />
			<tx:method name="delete*" read-only="false" rollback-for="Exception" />
			<tx:method name="query*" read-only="true" />
			<tx:method name="count*" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<!-- 监控Dao、Service中的方法 -->
	<aop:config proxy-target-class="true">
		<aop:advisor pointcut="execution(* com.jd.ssh.sshdemo.dao.impl.*DaoImpl.*(..))"
			advice-ref="txAdvice" />
		<aop:advisor
			pointcut="execution(* com.jd.ssh.sshdemo.service.impl.*ServiceImpl.*(..))"
			advice-ref="txAdvice" />
	</aop:config>

	<!-- production环境 -->
	<beans profile="production">
		<context:property-placeholder
			ignore-unresolvable="true" location="classpath*:/application.properties" />

		<!-- 数据源配置, 使用Tomcat JDBC连接池 -->
		<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
			destroy-method="close">
			<!-- Connection Info -->
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />

			<!-- Connection Pooling Info -->
			<property name="maxActive" value="${jdbc.pool.maxActive}" />
			<property name="maxIdle" value="${jdbc.pool.maxIdle}" />
			<property name="minIdle" value="0" />
			<property name="defaultAutoCommit" value="false" />
		</bean>

		<!-- 数据源配置,使用应用服务器的数据库连接池 -->
		<!--<jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/ExampleDB" 
			/> -->
	</beans>

	<!-- local development环境 -->
	<beans profile="development">
		<context:property-placeholder
			ignore-resource-not-found="true"
			location="classpath*:/application.properties,
          			  classpath*:/application.development.properties" />

		<!-- Tomcat JDBC连接池 -->
		<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
			destroy-method="close">
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
			<property name="defaultAutoCommit" value="false" />
		</bean>
	</beans>

	<!-- functional test 环境 -->
	<beans profile="functional">
		<context:property-placeholder
			ignore-resource-not-found="true"
			location="classpath*:/application.properties,
          			  classpath*:/application.functional.properties,
          			  classpath*:/application.functional-local.properties" />

		<!-- Tomcat JDBC连接池 -->
		<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
			destroy-method="close">
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
			<property name="defaultAutoCommit" value="false" />
		</bean>

		<!-- 初始化数据表结构 -->
		<jdbc:initialize-database data-source="dataSource"
			ignore-failures="ALL">
			<jdbc:script location="classpath:sql/${db.type}/schema.sql" />
		</jdbc:initialize-database>
	</beans>

	<!-- unit test环境 -->
	<beans profile="test">
		<context:property-placeholder
			ignore-resource-not-found="true"
			location="classpath*:/application.properties,
          			  classpath*:/application.test.properties" />

		<!-- Spring Simple连接池 -->
		<bean id="dataSource"
			class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
			<property name="driverClass" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
		</bean>

		<!-- 初始化数据表结构 与默认数据 -->
		<jdbc:initialize-database data-source="dataSource"
			ignore-failures="ALL">
			<jdbc:script location="classpath:sql/h2/schema.sql" />
			<jdbc:script location="classpath:data/h2/import-data.sql"
				encoding="UTF-8" />
		</jdbc:initialize-database>
	</beans>

</beans>