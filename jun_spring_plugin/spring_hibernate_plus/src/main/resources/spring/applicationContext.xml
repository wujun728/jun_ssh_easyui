<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
	                            http://www.springframework.org/schema/context 
	                            http://www.springframework.org/schema/context/spring-context-4.3.xsd
								http://www.springframework.org/schema/tx 
								http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
								http://www.springframework.org/schema/aop 
								http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
								http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
								">

    <context:annotation-config/>
    <context:component-scan base-package="com.baomidou.**.service.**"/>
    <context:component-scan base-package="com.baomidou.**.dao.**"/>

    <bean id="config"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:jdbc/datasource.properties</value>
                <value>classpath:jdbc/hibernate.properties</value>
            </list>
        </property>
    </bean>

    <!-- 配置数据源 -->
    <bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${master.url}"/>
        <property name="driverClassName" value="${master.driverClassName}"/>
        <property name="username" value="${master.username}"/>
        <property name="password" value="${master.password}"/>
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="${master.initialSize}"/>
        <!-- 连接池最大使用连接数量 -->
        <property name="maxActive" value="${master.maxActive}"/>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="${master.minIdle}"/>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="${master.maxWait}"/>
        <property name="poolPreparedStatements" value="${master.poolPreparedStatements}"/>
        <property name="maxPoolPreparedStatementPerConnectionSize"
                  value="${master.maxPoolPreparedStatementPerConnectionSize}"/>
        <property name="validationQuery" value="${master.validationQuery}"/>
        <property name="testOnBorrow" value="${master.testOnBorrow}"/>
        <property name="testOnReturn" value="${master.testOnReturn}"/>
        <property name="testWhileIdle" value="${master.testWhileIdle}"/>
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="${master.timeBetweenEvictionRunsMillis}"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="${master.minEvictableIdleTimeMillis}"/>
        <property name="maxOpenPreparedStatements" value="${master.maxOpenPreparedStatements}"/>
        <!-- 打开removeAbandoned功能 -->
        <property name="removeAbandoned" value="${master.removeAbandoned}"/>
        <!-- 1800秒，也就是30分钟 -->
        <property name="removeAbandonedTimeout" value="${master.removeAbandonedTimeout}"/>
        <!-- 关闭abanded连接时输出错误日志 -->
        <property name="logAbandoned" value="${master.logAbandoned}"/>
        <!-- 监控数据库 -->
        <property name="filters" value="${master.filters}"/>
    </bean>

    <!-- 配置hibernate session工厂 master -->
    <bean id="masterSessionFactory" class="com.baomidou.hibernateplus.HibernateSpringSessionFactoryBean">
        <property name="type" value="master"/>
        <property name="dataSource" ref="dataSource"/>
        <property name="hibernateProperties">
            <props>
                <!--<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>-->
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <prop key="hibernate.use_sql_comments">${hibernate.use_sql_comments}</prop>
            </props>
        </property>

        <!-- 自动扫描注解方式配置的hibernate类文件 -->
        <property name="packagesToScan">
            <list>
                <value>com.baomidou.hibernate.po</value>
            </list>
        </property>

    </bean>

    <!-- 配置事务管理器 -->
    <bean name="masterTransactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="masterSessionFactory"></property>
    </bean>
    <!-- 拦截器方式配置事物 -->
    <tx:advice id="masterTransactionAdvice" transaction-manager="masterTransactionManager">
        <tx:attributes>
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="get*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="select*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="query*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut id="masterTransactionPointcut"
                      expression="execution(* com.baomidou.hibernate.service..*Impl.*(..)) or execution(* com.baomidou.hibernateplus.service..*Impl.*(..))"/>
        <aop:advisor pointcut-ref="masterTransactionPointcut" advice-ref="masterTransactionAdvice"/>
    </aop:config>
    <!--需要主从分离 打开该注释-->
   <!-- <bean name="slaveDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
          destroy-method="close">
        <property name="url" value="${slave.url}"/>
        <property name="driverClassName" value="${slave.driverClassName}"/>
        <property name="username" value="${slave.username}"/>
        <property name="password" value="${slave.password}"/>
        <property name="initialSize" value="${slave.initialSize}"/>
        <property name="maxActive" value="${slave.maxActive}"/>
        <property name="minIdle" value="${slave.minIdle}"/>
        <property name="maxWait" value="${slave.maxWait}"/>
        <property name="poolPreparedStatements" value="${slave.poolPreparedStatements}"/>
        <property name="maxPoolPreparedStatementPerConnectionSize"
                  value="${slave.maxPoolPreparedStatementPerConnectionSize}"/>
        <property name="validationQuery" value="${slave.validationQuery}"/>
        <property name="testOnBorrow" value="${slave.testOnBorrow}"/>
        <property name="testOnReturn" value="${slave.testOnReturn}"/>
        <property name="testWhileIdle" value="${slave.testWhileIdle}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${slave.timeBetweenEvictionRunsMillis}"/>
        <property name="minEvictableIdleTimeMillis" value="${slave.minEvictableIdleTimeMillis}"/>
        <property name="maxOpenPreparedStatements" value="${slave.maxOpenPreparedStatements}"/>
        <property name="removeAbandoned" value="${slave.removeAbandoned}"/>
        <property name="removeAbandonedTimeout" value="${slave.removeAbandonedTimeout}"/>
        <property name="logAbandoned" value="${slave.logAbandoned}"/>
        <property name="filters" value="${slave.filters}"/>
    </bean>
    <bean id="slaveSessionFactory" class="com.baomidou.hibernateplus.HibernateSpringSessionFactoryBean">
        <property name="type" value="slave"/>
        <property name="dataSource" ref="slaveDataSource"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <prop key="hibernate.use_sql_comments">${hibernate.use_sql_comments}</prop>
            </props>
        </property>

        <property name="packagesToScan">
            <list>
                <value>com.baomidou.hibernate.po</value>
            </list>
        </property>

    </bean>
    <bean name="slaveTransactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="slaveSessionFactory"></property>
    </bean>
    <tx:advice id="slaveTransactionAdvice" transaction-manager="slaveTransactionManager">
        <tx:attributes>
            <tx:method name="*" propagation="REQUIRED" read-only="true"/>
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut id="slaveTransactionPointcut"
                      expression="execution(* com.baomidou.hibernate.service..*Impl.*(..)) or execution(* com.baomidou.hibernateplus.service..*Impl.*(..))"/>
        <aop:advisor pointcut-ref="slaveTransactionPointcut" advice-ref="slaveTransactionAdvice"/>
    </aop:config>-->
</beans>